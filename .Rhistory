load("~/transpipe/data/exp.rda")
load("~/transpipe/data/pheno.rda")
devtools::load_all(".")
library(transpipe)
library(transpipe)
library(transpipe)
final<-filtermatrix(exp)
variable<-varsig(final,x=1)
pcatrans(variable,pheno,group="group",pal="Set1")
varsig <- function(data,x=1){
if(!require(ggplot2)){install.packages("ggplot2")}
library(ggplot2)
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
vartable
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
df<-cbind(m,var)
ggplot(df,aes(x=var,y=m))+geom_point(alpha=0.5)
# plot(var,m,main="Most variable genes",xlab="Variance of expression",
#   ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
return(sub)
}
variable<-varsig(final,x=1)
varsig <- function(data,x=1){
if(!require(ggplot2)){install.packages("ggplot2")}
library(ggplot2)
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
meantable<-dataframe(m)
df<-cbind(meantable,vartable)
ggplot(df,aes(x=var,y=m))+geom_point(alpha=0.5)
# plot(var,m,main="Most variable genes",xlab="Variance of expression",
#   ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
return(sub)
}
variable<-varsig(final,x=1)
varsig <- function(data,x=1){
if(!require(ggplot2)){install.packages("ggplot2")}
library(ggplot2)
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
meantable<-data.frame(m)
df<-cbind(meantable,vartable)
ggplot(df,aes(x=var,y=m))+geom_point(alpha=0.5)
# plot(var,m,main="Most variable genes",xlab="Variance of expression",
#   ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
return(sub)
}
variable<-varsig(final,x=1)
varsig <- function(data,x=1){
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
plot(var,m,main="Most variable genes",xlab="Variance of expression",
ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
return(sub)
}
variable<-varsig(final,x=1)
variable<-varsig(final,x=0.5)
variable<-varsig(final,x=0.5)
varsig <- function(data,x=1){
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
plot(var,m,main="Unsupervized most variable genes",xlab="Variance of expression",
ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
return(sub)
}
#' @examples variable<-varsig(final,x=1)
variable<-varsig(final,x=1)
varsig <- function(data,x=1){
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
x=nrow(sub)
plot(var,m,main=paste0(x)," Unsupervized most variable genes",xlab="Variance of expression",
ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
return(sub)
}
variable<-varsig(final,x=1)
varsig <- function(data,x=1){
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
x=nrow(sub)
plot(var,m,main=" Unsupervized most variable genes",xlab="Variance of expression",
ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
return(sub)
}
variable<-varsig(final,x=1)
varsig <- function(data,x=1){
variable <- apply(data,1, var)
var<-variable[!is.na(variable)]
tb<-mean(var)+(x*sd(var))
baseline<-mean(var)
vartable<-data.frame(var)
combined<-merge(vartable,data,by="row.names")
row.names(combined)<-combined$Row.names
combord<-combined[with(combined,order(-var)),]
colord<-ncol(combord)
combord<-combord[,2:colord]
m <- apply(combord,1, mean)
sub<-subset(combord, combord$var > tb)
head(sub,n=30)[,1:3]
nrow(sub)
sub$var<-NULL
x=nrow(sub)
plot(var,m,main=paste(x," Unsupervized most variable genes"),xlab="Variance of expression",
ylab="Mean of expression")
abline(v=tb,col="blue",lty=3)
abline(v=baseline,col="red",lty=1)
return(sub)
}
variable<-varsig(final,x=1)
library(transpipe)
library(transpipe)
rm(list=ls())
library(transpipe)
data(exp)
data(pheno)
final<-filtermatrix(exp)
variable<-varsig(final,x=0.1)
pcatrans(variable,pheno,group="group",pal="Dark1")
pcatrans(variable,pheno,group="group",pal="Dark21")
pcatrans(variable,pheno,group="group",pal="Dark2")
pcatrans(variable,pheno,group="group",pal="Set2")
pcatrans(variable,pheno,group="group",pal="Set3")
pcatrans(variable,pheno,group="group",pal="Accent")
res<-deg(variable,pheno$group,control="NT")
vollimma(res,nb=500,fc=0.5,p=0.05,size=4,alpha=1)
bestheat(res,ok,q=0.8,up=0.001,font=10)
bestheat(res,variable,q=0.8,up=0.001,font=10)
bestheat(res,final,q=0.8,up=0.001,font=10)
bestheat(res,final,q=0.8,up=0.001,font=6)
bestheat(res,final,q=0.0.5,up=0.001,font=6)
bestheat(res,final,q=0.05,up=0.001,font=6)
bestheat(res,final,q=0.05,up=0.001,font=10)
bestheat(res,final,q=0.05,up=1,font=10)
variable<-varsig(final,x=1)
pcatrans(variable,pheno,group="group",pal="Set1")
vollimma(res,nb=100,fc=0.5,p=0.05,size=2.5,alpha=05)
devtools::load_all(".")
library(transpipe)
devtools::load_all(".")
devtools::load_all(".")
library(transpipe)
2^0.25
2^0.5
2^0.3
